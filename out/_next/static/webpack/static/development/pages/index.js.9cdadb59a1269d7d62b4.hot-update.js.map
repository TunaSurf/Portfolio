{"version":3,"file":"static/webpack/static/development/pages/index.js.9cdadb59a1269d7d62b4.hot-update.js","sources":["webpack:///./components/Project.js"],"sourcesContent":["import React, { Component } from 'react';\nimport ProjectPreviewImage from './ProjectPreviewImage';\n\n//Could probably split this up into 2 more components within - Preview and Details\n\nclass Project extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      detailsHeight: 0,\n      mounted: false\n    }\n  }\n\n  componentDidMount() {\n    //get rendered height of project details\n    this.setState({ detailsHeight: this.details.offsetHeight });\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  setProjectActive = (e) => {\n    e.target.parentNode.classList.toggle('active');\n  }\n\n  //function to get new height of project details on page resize\n  handleResize = () => {\n    window.requestAnimationFrame(() => {\n      this.setState({ detailsHeight: this.details.offsetHeight });\n    });\n  }\n\n  render() {\n    const projectColor = this.props.color;\n    let detailsHeight = this.state.detailsHeight;\n    \n    return (\n      <li>\n        <div className=\"project-preview\" onClick={this.setProjectActive} >\n          <ProjectPreviewImage \n            name={this.props.name}\n            image={this.props.image}\n            mobile={this.props.mobile}\n          />\n          <div className=\"darken\"></div>\n          <header>\n            <h2>{this.props.name}</h2>\n            <svg className=\"arrow\" viewBox=\"0 0 22 11\" xmlns=\"http://www.w3.org/2000/svg\" fillRule=\"evenodd\" clipRule=\"evenodd\" strokeLinejoin=\"round\" strokeMiterlimit=\"1.4142\">\n              <path d=\"M19.1376.0002h2l-10.569 10.568L-.0004.0002h2l8.569 8.568 8.569-8.568z\" fill=\"#F4F4F8\" />\n            </svg>\n          </header>\n        </div>\n        <section className=\"project-details-container\">\n          <div className=\"project-details\" ref={element => this.details = element}>\n            <div className=\"details-left\">\n              <h3>{this.props.name}</h3>\n              <ul>\n                {this.props.tools.map((tool, i) => (\n                  <li key={i}><i className={`devicon-${tool}-plain`} title={tool}></i></li>\n                ))}\n              </ul>\n              <ul>\n                <li><a href={this.props.link}>View Site</a></li>\n                <li><span>â€¢</span></li>\n                <li><a href={this.props.source}>View Source Code</a></li>\n              </ul>\n            </div>\n            <div className=\"details-right\">\n              {this.props.description.split('\\\\n').map((line,i) => <p key={i}>{line}</p>)}\n            </div>\n            <div className=\"close-container\"><button>X</button></div>\n          </div>\n        </section>\n        <style jsx>{`\n          li {\n            position: relative;\n            z-index: 1;\n          }\n          .project-preview {\n            height: 400px;\n            position: relative;\n            background-color: ${projectColor};\n            cursor: pointer;\n            transition: filter 200ms 50ms ease;\n          }\n          .project-preview > * {\n            pointer-events: none;\n          }\n          .darken {\n            position: absolute;\n            width: 100%;\n            height: 100%;\n            background: #1E1E20;\n            opacity: 0.15;\n            transition: opacity 150ms 30ms linear;\n          }\n          .project-preview:hover .darken {\n            opacity: 0.1;\n          }\n          .active .darken, .active .project-preview:hover .darken {\n            opacity: 0;\n          }\n          header {\n            position: absolute;\n            top: 30%;\n            left: 40px;\n            display: flex;\n            align-items: center;\n          }\n          h2 {\n            color: #F4F4F8;\n            font-size: 3rem;\n            margin-right: 15px;\n            text-shadow: 0 1px 3px rgba(30,30,32,0.25);\n          }\n          .arrow {\n            transform: rotate(-90deg);\n            height: 1.5rem;\n            width: 1.5rem;\n            min-width: 1.5rem;\n            opacity: 0.75;\n            transition: 200ms ease;\n            filter: drop-shadow(0 1px 2px rgba(30,30,32,0.25));\n          }\n          .active .arrow {\n            transform: rotate(0);\n          }\n          .project-details-container {\n            height: 0;\n            background-color: #F4F4F8;\n            width: 100%;\n            box-shadow: inset 0 12px 12px -12px rgba(0,0,0,0.3), inset 0 5px 5px -5px rgba(0,0,0,0.25), inset 0 -12px 12px -12px rgba(0,0,0,0.3), inset 0 -5px 5px -5px rgba(0,0,0,0.25);\n            overflow: hidden;\n            transform: translate3d(0,0,0);\n            transition: height 200ms cubic-bezier(.17,.67,.16,.99);\n          }\n          .active .project-details-container {\n            height: ${detailsHeight}px;\n          }\n          .project-details {\n            width: 100%;\n            padding: 100px 40px;\n            box-sizing: border-box;\n            display: grid;\n            // grid-auto-flow: column;\n            grid-template-columns: auto auto;\n            grid-column-gap: 40px;\n            grid-row-gap: 1.4em;\n            justify-content: center;\n            transform: translateY(-30px);\n            opacity: 0;\n            transition: opacity 199ms linear, transform 1ms 199ms linear;\n          }\n          .active .project-details {\n            transform: translateY(0);\n            opacity: 1;\n            transition: transform 200ms ease-out, opacity 190ms 10ms linear;\n          }\n          .details-left {\n            display: grid;\n            align-content: start;\n          }\n          h3 {\n            font-weight: 500;\n          }\n          ul {\n            display: grid;\n            grid-auto-flow: column;\n            grid-gap: 5px;\n            justify-content: start;\n          }\n          i {\n            font-size: .8rem;\n            color: rgba(30,30,32,0.8);\n          }\n          ul:last-child {\n            margin-top: .5em;\n          }\n          a, span {\n            color: rgba(30,30,32,0.7);\n          }\n          a {\n            position: relative;\n            font-weight: 300;\n            padding: 0 5px;\n            z-index: 1;\n          }\n          a:after {\n            content: \"\";\n            position: absolute;\n            left: 0;\n            bottom: 0;\n            width: 100%;\n            height: 1px;\n            background: ${projectColor};\n            opacity: 0.6;\n            z-index: -1;\n            transition: 200ms 50ms ease;\n          }\n          a:hover:after {\n            bottom: 40%;\n            transform-origin: bottom;\n            transform: scaleY(8);\n          }\n          .details-right {\n            max-width: 700px;\n          }\n          p {\n            color: rgba(30,30,32,0.8);\n            margin-bottom: 1em;\n          }\n          p:last-child {\n            margin-bottom: 0;\n          }\n          .close-container {\n            grid-column-end: -1;\n            grid-row-start: span -1;\n            justify-self: end;\n          }\n          button {\n            border: none;\n            border-radius: 50%;\n            background: rgba(30,30,32,0.9);\n            color: #F1F1F8;\n            width: 30px;\n            height: 30px;\n            font-family: inherit;\n            font-size: 100%;\n            margin: 0;\n            -webkit-appearance: button;\n          }\n          @media screen and (max-width: 1000px) {\n            header {\n              left: 20px;\n            }\n            h2 {\n              font-size: 2.5rem;\n            }\n            .project-details {\n              padding: 100px 20px;\n            }\n          }\n          @media screen and (max-width: 900px) {\n            .project-details {\n              grid-template-columns: auto;\n            }\n          }\n          @media screen and (max-width: 750px) {\n            h2 {\n              font-size: 2rem;\n              margin-right: 10px;\n            }\n            .parallax-container {\n              right: 0;\n            }\n            .arrow {\n              width: 1.2rem;\n              min-width: 1.2rem;\n            }\n          }\n          @media screen and (max-width: 600px) {\n            .project-preview {\n              height: 300px;\n            }\n            h2 {\n              font-size: 1.5rem;\n            }\n            .parallax-container {\n              width: 300px;\n            }\n            .arrow {\n              width: 1rem;\n              min-width: 1rem;\n            }\n            .project-details {\n              padding: 80px 20px;\n            }\n          }\n          @media screen and (max-width: 500px) {\n            header {\n              left: 15px;\n            }\n            .parallax-container {\n              right: -50px;\n            }\n            .project-details {\n              padding: 80px 15px;\n            }\n          }\n        `}</style>\n      </li>\n    )\n  }\n};\n\nexport default Project;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAmBA;AACA;AACA;AArBA;AAwBA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA1BA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;;;AAajCA;AAAA;AAAA;AAAA;AAAA;AA+PA;;;;AAlSA;AACA;AAkSA;AAEA;;;;A","sourceRoot":""}